// Code generated by "stringer -type=TokenName -output ./tokenName_string.go"; DO NOT EDIT.

package meta

import "strconv"

const _TokenName_name = "NodeStartNodeEndStringVarnameTokenNumStringTokenWhileTokenEndwhileTokenForInitSemicolonTokenForCondSemicolonTokenEndforTokenEndforeachTokenEnddeclareTokenAsTokenEndswitchTokenFunctionTokenConstTokenInsteadofTokenClassTokenExtendsTokenImplementsTokenDoubleArrowTokenCurlyOpenTokenPaamayimNekudotayimTokenUseLeadingNsSeparatorTokenNsSeparatorTokenEllipsisTokenLogicalOrTokenLogicalXorTokenLogicalAndTokenInstanceofTokenEndifTokenAbstractTokenFinalTokenPrivateTokenProtectedTokenPublicTokenIncTokenDecTokenObjectOperatorTokenCoalesceTokenSpaceshipTokenPlusEqualTokenMinusEqualTokenMulEqualTokenPowEqualTokenDivEqualTokenConcatEqualTokenModEqualTokenAndEqualTokenOrEqualTokenXorEqualTokenSlEqualTokenSrEqualTokenBooleanOrTokenBooleanAndTokenPowTokenSlTokenSrTokenIsIdenticalTokenIsNotIdenticalTokenIsEqualTokenIsNotEqualTokenIsSmallerOrEqualTokenIsGreaterOrEqualTokenCaseSeparatorTokenOpenCurlyBracesTokenCloseCurlyBracesTokenSemiColonTokenColonTokenOpenParenthesisTokenCloseParenthesisTokenOpenSquareBracketCloseSquareBracketQuestionMarkTokenAmpersandTokenMinusTokenPlusTokenCommaTokenVerticalBarTokenEqualTokenCaretTokenAsteriskTokenSlashTokenPercentTokenLessTokenGreaterTokenDotToken"

var _TokenName_index = [...]uint16{0, 9, 16, 34, 48, 58, 71, 92, 113, 124, 139, 154, 161, 175, 188, 198, 212, 222, 234, 249, 265, 279, 303, 329, 345, 358, 372, 387, 402, 417, 427, 440, 450, 462, 476, 487, 495, 503, 522, 535, 549, 563, 578, 591, 604, 617, 633, 646, 659, 671, 684, 696, 708, 722, 737, 745, 752, 759, 775, 794, 806, 821, 842, 863, 881, 901, 922, 936, 946, 966, 987, 1004, 1022, 1039, 1053, 1063, 1072, 1082, 1098, 1108, 1118, 1131, 1141, 1153, 1162, 1174, 1182}

func (i TokenName) String() string {
	if i < 0 || i >= TokenName(len(_TokenName_index)-1) {
		return "TokenName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenName_name[_TokenName_index[i]:_TokenName_index[i+1]]
}
