// Code generated by "stringer -type=TokenName -output ./tokenName_string.go"; DO NOT EDIT.

package meta

import "strconv"

const _TokenName_name = "NodeStartNodeEndStringVarnameTokenNumStringTokenInlineHTMLTokenWhileTokenEndwhileTokenForInitSemicolonTokenForCondSemicolonTokenEndforTokenEndforeachTokenEnddeclareTokenAsTokenEndswitchTokenFunctionTokenConstTokenReturnTokenTryTokenThrowTokenInsteadofTokenVarTokenUnsetTokenClassTokenTraitTokenInterfaceTokenExtendsTokenImplementsTokenDoubleArrowTokenCallableTokenCurlyOpenTokenPaamayimNekudotayimTokenUseLeadingNsSeparatorTokenNsSeparatorTokenEllipsisTokenLogicalOrTokenLogicalXorTokenLogicalAndTokenInstanceofTokenEndifTokenAbstractTokenFinalTokenPrivateTokenProtectedTokenPublicTokenIncTokenDecTokenObjectOperatorTokenCoalesceTokenSpaceshipTokenPlusEqualTokenMinusEqualTokenMulEqualTokenPowEqualTokenDivEqualTokenConcatEqualTokenModEqualTokenAndEqualTokenOrEqualTokenXorEqualTokenSlEqualTokenSrEqualTokenBooleanOrTokenBooleanAndTokenPowTokenSlTokenSrTokenIsIdenticalTokenIsNotIdenticalTokenIsEqualTokenIsNotEqualTokenIsSmallerOrEqualTokenIsGreaterOrEqualTokenHaltCompilerTokenCaseSeparatorTokenOpenCurlyBracesTokenCloseCurlyBracesTokenSemiColonTokenColonTokenOpenParenthesisTokenCloseParenthesisTokenOpenSquareBracketCloseSquareBracketQuestionMarkTokenAmpersandTokenMinusTokenPlusTokenCommaTokenVerticalBarTokenEqualTokenCaretTokenAsteriskTokenSlashTokenPercentTokenLessTokenGreaterTokenDotToken"

var _TokenName_index = [...]uint16{0, 9, 16, 34, 48, 63, 73, 86, 107, 128, 139, 154, 169, 176, 190, 203, 213, 224, 232, 242, 256, 264, 274, 284, 294, 308, 320, 335, 351, 364, 378, 402, 428, 444, 457, 471, 486, 501, 516, 526, 539, 549, 561, 575, 586, 594, 602, 621, 634, 648, 662, 677, 690, 703, 716, 732, 745, 758, 770, 783, 795, 807, 821, 836, 844, 851, 858, 874, 893, 905, 920, 941, 962, 979, 997, 1017, 1038, 1052, 1062, 1082, 1103, 1120, 1138, 1155, 1169, 1179, 1188, 1198, 1214, 1224, 1234, 1247, 1257, 1269, 1278, 1290, 1298}

func (i TokenName) String() string {
	if i < 0 || i >= TokenName(len(_TokenName_index)-1) {
		return "TokenName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenName_name[_TokenName_index[i]:_TokenName_index[i+1]]
}
