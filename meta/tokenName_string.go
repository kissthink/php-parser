// Code generated by "stringer -type=TokenName -output ./tokenName_string.go"; DO NOT EDIT.

package meta

import "strconv"

const _TokenName_name = "UnknownTokenNodeStartNodeEndMagicConstantTokenIncludeTokenIncludeOnceTokenExitTokenIfTokenLnumberTokenDnumberTokenStringTokenStringVarnameTokenNumStringTokenInlineHTMLTokenEncapsedAndWhitespaceTokenConstantEncapsedStringTokenEchoTokenDoTokenWhileTokenEndwhileTokenForInitSemicolonTokenForCondSemicolonTokenForTokenEndforTokenForeachTokenEndforeachTokenDeclareTokenEnddeclareTokenAsTokenSwitchTokenEndswitchTokenCaseTokenDefaultTokenBreakTokenContinueTokenGotoTokenFunctionTokenConstTokenReturnTokenTryTokenCatchTokenFinallyTokenThrowTokenUseTokenInsteadofTokenGlobalTokenVarTokenUnsetTokenIssetTokenEmptyTokenClassTokenTraitTokenInterfaceTokenExtendsTokenImplementsTokenDoubleArrowTokenListTokenArrayTokenCallableTokenStartHeredocTokenCurlyOpenTokenPaamayimNekudotayimTokenNamespaceTokenUseLeadingNsSeparatorTokenNsSeparatorTokenEllipsisTokenEvalTokenRequireTokenRequireOnceTokenLogicalOrTokenLogicalXorTokenLogicalAndTokenInstanceofTokenNewAnchorCloneTokenElseifTokenElseTokenEndifTokenPrintTokenYieldTokenStaticTokenAbstractTokenFinalTokenPrivateTokenProtectedTokenPublicTokenIncTokenDecTokenYieldFromTokenObjectOperatorTokenIntCastTokenDoubleCastTokenStringCastTokenArrayCastTokenObjectCastTokenBoolCastTokenUnsetCastTokenCoalesceTokenSpaceshipTokenPlusEqualTokenMinusEqualTokenMulEqualTokenPowEqualTokenDivEqualTokenConcatEqualTokenModEqualTokenAndEqualTokenOrEqualTokenXorEqualTokenSlEqualTokenSrEqualTokenBooleanOrTokenBooleanAndTokenPowTokenSlTokenSrTokenIsIdenticalTokenIsNotIdenticalTokenIsEqualTokenIsNotEqualTokenIsSmallerOrEqualTokenIsGreaterOrEqualTokenHaltCompilerTokenCaseSeparatorTokenDoubleQuoteTokenBackquoteTokenOpenCurlyBracesTokenCloseCurlyBracesTokenSemiColonTokenColonTokenOpenParenthesisTokenCloseParenthesisTokenOpenSquareBracketCloseSquareBracketQuestionMarkTokenAmpersandTokenMinusTokenPlusTokenExclamationMarkTokenTildeTokenAtTokenCommaTokenVerticalBarTokenEqualTokenCaretTokenAsteriskTokenSlashTokenPercentTokenLessTokenGreaterTokenDotToken"

var _TokenName_index = [...]uint16{0, 12, 21, 28, 46, 58, 74, 83, 90, 102, 114, 125, 143, 157, 172, 198, 225, 234, 241, 251, 264, 285, 306, 314, 325, 337, 352, 364, 379, 386, 397, 411, 420, 432, 442, 455, 464, 477, 487, 498, 506, 516, 528, 538, 546, 560, 571, 579, 589, 599, 609, 619, 629, 643, 655, 670, 686, 695, 705, 718, 735, 749, 773, 787, 813, 829, 842, 851, 863, 879, 893, 908, 923, 938, 947, 957, 968, 977, 987, 997, 1007, 1018, 1031, 1041, 1053, 1067, 1078, 1086, 1094, 1108, 1127, 1139, 1154, 1169, 1183, 1198, 1211, 1225, 1238, 1252, 1266, 1281, 1294, 1307, 1320, 1336, 1349, 1362, 1374, 1387, 1399, 1411, 1425, 1440, 1448, 1455, 1462, 1478, 1497, 1509, 1524, 1545, 1566, 1583, 1601, 1617, 1631, 1651, 1672, 1686, 1696, 1716, 1737, 1754, 1772, 1789, 1803, 1813, 1822, 1842, 1852, 1859, 1869, 1885, 1895, 1905, 1918, 1928, 1940, 1949, 1961, 1969}

func (i TokenName) String() string {
	if i < 0 || i >= TokenName(len(_TokenName_index)-1) {
		return "TokenName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenName_name[_TokenName_index[i]:_TokenName_index[i+1]]
}
